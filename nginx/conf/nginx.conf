worker_processes auto;
worker_rlimit_nofile 102400;

events {
worker_connections 100000;
}
http {
    server_tokens off;
    log_format anonymous_log_format '$remote_user [$time_local] '
                                   '"$request" $status $bytes_sent '
                                   '"$http_referer" "$http_user_agent" "$gzip_ratio"';
    error_log /var/log/nginx/error.log error;
    access_log /var/log/nginx/access.log anonymous_log_format;
    map_hash_max_size 5096;
    map_hash_bucket_size 128;
    # use a combination of geo and map to whitelist internal (docker network) ip ranges for own service communication
    geo $ip_whitelist {
        default 1;
        # ip whitelist for secured urls
        # example:
        # xxx.xxx.xxx.xxx off;
        # xxx.xxx.xxx.xxx/12 off;
    }
    map $ip_whitelist $remote_addr_with_whitelist {
        0 "";
        1 $binary_remote_addr;
    }
    map $remote_addr $maintenance {
        default off;
        # ip whitelist for secured urls
        # example:
        # xxx.xxx.xxx.xxx off;
        # xxx.xxx.xxx.xxx/12 off;
    }
    map $rocketchat_endpoint $rocketchat_endpoint_permission {
        default forbidden;
        groups.create allowed;
        groups.delete allowed;
        groups.invite allowed;
        groups.kick allowed;
        groups.members allowed;
        groups.counters allowed;
        groups.messages allowed;
        login allowed;
        logout allowed;
        users.delete allowed;
        users.info allowed;
        rooms.cleanHistory allowed;
        '~^rooms\.upload\/?[\w]{0,30}$' allowed;
        rooms.get allowed;
        subscriptions.get allowed;
        subscriptions.read allowed;
        chat.postMessage allowed;
    }
    map $keycloak_endpoint $keycloak_endpoint_permission {
        default forbidden;
        realms/caritas-online-beratung/protocol/openid-connect/token allowed;
        realms/caritas-online-beratung/protocol/openid-connect/certs allowed;
        realms/caritas-online-beratung/protocol/openid-connect/logout allowed;
        realms/caritas-online-beratung/users allowed;
        realms/master/users allowed;
        realms/master/protocol/openid-connect/auth allowed;
        realms/master/protocol/openid-connect/login-status-iframe.html/init allowed;
        realms/master/protocol/openid-connect/token allowed;
        realms/master/login-actions/authenticate allowed;
        realms/master/protocol/openid-connect/login-status-iframe.html allowed;
        #resources
        '~^login\/keycloak\/?.{0,100}$' allowed;
        '~^admin\/keycloak\/?.{0,100}$' allowed;
        js/keycloak.js allowed;
    }
    limit_req_zone $remote_addr_with_whitelist zone=by_ip_15rs:10m rate=15r/s;
    limit_req_zone $remote_addr_with_whitelist zone=by_ip_10rs:10m rate=10r/s;
    limit_req_zone $remote_addr_with_whitelist zone=by_ip_5rs:10m rate=5r/s;
    limit_req_zone $remote_addr_with_whitelist zone=by_ip_1rm:10m rate=1r/m;
    limit_conn_zone $binary_remote_addr zone=addr:10m;
    limit_conn addr 20;
    limit_req_status 429;
    limit_conn_status 429;
    server {
        include adminer.conf;
        include security-headers.conf;
        include ip-restrictions.conf;
        location / {
            limit_req zone=by_ip_10rs burst=10 nodelay;
            proxy_pass http://adminer:8080;
            resolver 127.0.0.11;
        }
    }
    server {
        include server.conf;
        include security-headers.conf;
    }
    server {
        include server-ssl.conf;
        include security-headers.conf;
        
        if ($maintenance = on) {
            return 503;
        }
        error_page 503 @maintenance;
        location @maintenance {
            rewrite ^ /under-construction.html;
            proxy_pass http://frontend:80;
        }

        include locations/*.conf;
    }
}